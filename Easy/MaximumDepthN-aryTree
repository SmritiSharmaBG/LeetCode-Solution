/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public int maxDepth(Node root) {
        int d = 0;
        return calDepth(root);
    }
    int max = 0;
    int calDepth(Node root) {
        if(root == null)
            return 0;
        List<Integer> list= new ArrayList<>();
        int c = root.children.size();
        for(int i = 0; i < c; i++) {
            list.add(calDepth(root.children.get(i)));
        }
        max = getMax(list);
        return max+1;
    }
    
    int getMax(List<Integer> list) {
        int m = 0;
        for(int i : list) 
            m = i>m ? i : m;
        return m;
    }
}
