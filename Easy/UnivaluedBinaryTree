/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isUnivalTree(TreeNode root) {
        int v = root.val;
        return checkUni(root, v);
    }
    
    boolean checkUni(TreeNode node, int v) {
        if(node == null)
            return true;
        else if(node.left == null && node.right == null)
            return true;
        else if(node.left != null && node.right == null)
            return node.left.val == v && checkUni(node.left,v);
        else if(node.left == null && node.right != null)
            return node.right.val == v && checkUni(node.right,v);
        else 
            return (node.left.val == v && node.right.val == v && checkUni(node.left,v) && checkUni(node.right,v));
    }
}
