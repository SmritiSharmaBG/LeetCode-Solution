/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = new TreeNode(preorder[0]);
        for (int i = 1; i < preorder.length; i ++) {
            root = makeTree(root, preorder[i]);
        }
        return root;
    }
    
    public TreeNode makeTree(TreeNode root, int x) {
        if (root == null) {
            TreeNode node = new TreeNode(x);
            return node;
        }
        if (x < root.val) root.left = makeTree(root.left, x);
        else if (x > root.val) root.right = makeTree(root.right, x);
        return root;
    }
}
